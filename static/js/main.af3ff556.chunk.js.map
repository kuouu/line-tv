{"version":3,"sources":["views/Sidebar.js","views/Login.js","components/StoreInfo/StoreName.js","components/StoreInfo/Infomation.js","components/StoreInfo/Description.js","store/action.js","views/StoreInfo.js","components/Dashboard/KeyNumber.js","components/Dashboard/CustomerChart.js","components/Dashboard/ReplyStat.js","views/Dashboard.js","components/EditorPanel/Menu.js","components/Message/text.js","components/Message/image.js","components/Message/CarouselSection.js","components/Message/index.js","components/State/index.js","components/State/ButtonEdge.js","components/EditorPanel/index.js","views/BotEditor.js","views/Navbar.js","App.js","index.js"],"names":["Sidebar","w","p","color","backgroundColor","spacing","to","align","fontSize","LogoText","LinkText","styled","Text","Link","Login","StoreName","name","icon","submit","justify","size","src","fontWeight","colorScheme","onClick","Infomation","info","setInfo","console","log","category","setTags","newTags","addNewTag","e","length","newTag","target","value","bgColor","border","borderRadius","mb","maxW","type","opening_hours","onChange","placeholder","phone_num","location","onBlur","onKeyPress","key","wrap","map","tag","m","isTruncated","filter","deleteTag","Description","description","setDescription","flexGrow","h","resize","HWID","upload","path","a","formData","FormData","append","axios","method","url","data","headers","Authorization","mimeType","res","link","getStoreInfo","postStoreInfo","getFSM","hwid","postFSM","node_id","JSON","stringify","StoreInfo","useState","setName","setIcon","useEffect","fetchData","split","px","py","shop_id","join","KeyNumber","DisplayNumber","title","number","minW","direction","CustomerChart","style","height","option","xAxis","yAxis","series","tooltip","trigger","question","reply","num","ReplyStat","selected","setSelected","maxH","minH","d","index","overflow","CustomListItem","ListItem","Dashboard","mt","Menu","onGlobalSave","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","className","draggable","TextSection","onEdit","editHandler","content","setContent","buttons","setButtons","defaultValue","bg","b","idx","role","text","textAlign","bs","cursor","newBtn","edgeTo","ImageSection","setUrl","alt","display","files","newUrl","CarouselSection","contents","ImagePlaceHolder","id","uuidv4","width","opacity","newContent","htmlFor","_hover","overflowX","position","urls","bottom","variant","MessageTypeMap","MessageSection","onEditSection","keys","values","forEach","i","rest","shadow","borderWidth","as","State","onDelete","stateData","onSaveState","onSetPosition","parse","sections","setSections","setTitle","editIdx","setEditIdx","useDisclosure","isOpen","onOpen","onClose","onSave","ss","result","Array","from","onNewSection","SectionTemplates","newSection","nodeStyle","onMouseUp","clientX","clientY","alignItems","padding","s","s_idx","margin","b_idx","dotStyle","maxWidth","onDragEnd","destination","splice","source","removed","droppableId","provided","snapshot","droppableProps","ref","innerRef","arr","draggableId","draggableProps","transition","justifyContent","dragHandleProps","MdOutlineDragIndicator","_groupHover","MdEditNote","v","MdOutlineClose","onRemoveSection","Message","allowMultiple","flex","pb","columns","BsTextareaT","BsImage","BiCarousel","BsGrid1X2","mr","boxShadow","top","zIndex","foreignObjectSize","ButtonEdge","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","markerEndId","arrowHeadType","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","x","y","requiredExtensions","startId","Panel","reactFlowWrapper","useRef","reactFlowInstance","setReactFlowInstance","elements","setElements","setStateData","getData","states","sd","replace","getPosition","reactFlowBounds","current","getBoundingClientRect","project","left","deleteElementById","useCallback","els","targetElement","findIndex","edges","getElements","isEdge","connectedEdges","getConnectedEdges","removeElements","sectionIdx","sourceHandle","buttonIdx","newStateData","newSections","_s","se","se_idx","params","targetHandle","addEdge","c","c_idx","onConnect","onElementsRemove","elementsToRemove","onEdgeUpdate","oldEdge","newConnection","updateEdge","onLoad","_reactFlowInstance","onDrop","preventDefault","newId","newNode","es","concat","onDragOver","dropEffect","nodeTypes","node","edgeTypes","button","gap","stateIds","indexOf","BotEditor","Navbar","useLocation","pathname","App","Container","MainSection","exact","component","div","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af3ff556.chunk.js","sourcesContent":["import React from 'react'\nimport { Stack, Text, Flex } from '@chakra-ui/layout'\nimport styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\nimport { MdOutlineLiveTv } from \"react-icons/md\";\n\nexport default function Sidebar() {\n\n  return (\n    <Stack w='200px' p='20px' color=\"white\" backgroundColor='#282c34' spacing={3}>\n      <Link to='/'>\n        <Flex align='center'>\n          <MdOutlineLiveTv fontSize='1.5rem'/>\n          <LogoText>Line MO</LogoText>\n        </Flex>\n      </Link>\n\n      <LinkText to='./dashboard'>Dashboard</LinkText>\n      <LinkText to='./storeinfo'>Store Info</LinkText>\n      <LinkText to='./boteditor'>Bot Editor</LinkText>\n    </Stack>\n  )\n}\n\nconst LogoText = styled(Text)`\n  margin-left: 0.5rem;\n  font-size: 1.5rem;\n  font-weight: bold;\n`\n\nconst LinkText = styled(Link)`\n  :hover{\n    color: #61dafb;\n  }\n`\n","import React from 'react'\n\nexport default function Login() {\n  return (\n    <div>\n      login\n    </div>\n  )\n}\n","import React from 'react'\nimport { HStack, Avatar, Text, Flex, Button } from '@chakra-ui/react'\n\nexport default function StoreName({ name, icon, submit }) {\n  return (\n    <Flex w='100%' align='center' justify='space-between'>\n      <HStack spacing={8}>\n        <Avatar size=\"xl\" name=\"ncku\" src={icon} />\n        <Text fontSize='4xl' fontWeight='bold'>{name}</Text>\n      </HStack>\n      <Button colorScheme=\"blue\" onClick={submit}>Save</Button>\n    </Flex>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Flex, Text, Input, Stack, HStack, Tag, TagCloseButton } from '@chakra-ui/react'\n\nexport default function Infomation({ info, setInfo }) {\n  console.log(info.category)\n  const setTags = (newTags) => {\n    setInfo({...info, category: newTags})\n  }\n  const handleOnBlur = (e) => {\n    if (e.target.value === '') return;\n    addNewTag(e);\n  }\n  const handleEnter = (e) => {\n    if (e.key === 'Enter' && e.target.value !== '') {\n      addNewTag(e);\n    }\n  }\n  const addNewTag = (e) => {\n    if (info.category.length >= 5) return;\n    const newTag = e.target.value\n    setTags([...info.category, newTag])\n    e.target.value = ''\n  }\n  const deleteTag = (key) => {\n    const newTags = info.category.filter(tag => tag !== key)\n    setTags(newTags);\n  }\n  return (\n    <Flex\n      bgColor='#fafafc'\n      justify='space-between'\n      border='solid 1px #e3e3e3'\n      borderRadius={3}\n      p={3}\n    >\n      <Stack spacing={6} w='48%'>\n        <Stack >\n          <Text mb=\"8px\">Business Hours:</Text>\n          <HStack maxW='600px'>\n            <Input\n              type='time'\n              value={info.opening_hours[0]}\n              onChange={e => setInfo({\n                ...info,\n                opening_hours: [e.target.value, info.opening_hours[1]]\n              })}\n            />\n            <Text>~</Text>\n            <Input\n              type='time'\n              value={info.opening_hours[1]}\n              onChange={e => setInfo({\n                ...info,\n                opening_hours: [info.opening_hours[0], e.target.value]\n              })}\n            />\n          </HStack>\n        </Stack>\n        <Stack>\n          <Text>Phone Number:</Text>\n          <Input\n            maxW='600px'\n            type='tel'\n            placeholder='09XX-XXX-XXX'\n            value={info.phone_num}\n            onChange={e => setInfo({ ...info, phone_num: e.target.value })}\n          />\n        </Stack>\n        <Stack>\n          <Text>Location:</Text>\n          <Input\n            maxW='600px'\n            placeholder='somewhere'\n            value={info.location}\n            onChange={e => setInfo({ ...info, location: e.target.value })}\n          />\n        </Stack>\n      </Stack>\n      <Stack w='48%'>\n        <Flex w='100%' justify='space-between'>\n          <Text>Tags:</Text>\n          <Text>{`${info.category.length}/5`}</Text>\n        </Flex>\n        <Input onBlur={handleOnBlur} onKeyPress={handleEnter} />\n        <Flex wrap='wrap'>\n          {info.category.length > 0 && info.category.map(tag => <Tag m='5px' colorScheme='cyan' key={tag}>\n            <Text isTruncated>{tag}</Text>\n            <TagCloseButton onClick={() => deleteTag(tag)} />\n          </Tag>)\n          }\n        </Flex>\n      </Stack>\n    </Flex>\n  )\n}\n","import React from 'react'\nimport { Stack, Text, Textarea } from '@chakra-ui/react'\n\nexport default function Description({ description, setDescription }) {\n  const handleOnChange = (e) => {\n    setDescription(e.target.value)\n  }\n  return (\n    <Stack\n      bgColor='#fafafc'\n      border='solid 1px #e3e3e3'\n      borderRadius={3}\n      p={3}\n      flexGrow={1}\n    >\n      <Text>Description:</Text>\n      <Textarea\n        h='100%'\n        resize='none'\n        placeholder='introduce your place...'\n        value={description}\n        onChange={handleOnChange}\n      />\n    </Stack>\n  )\n}\n","import axios from 'axios';\n\nconst API_KEY = \"eeb0a3a67ea2c64\";\nconst HWID = \"0153a4ceb5\";\n\nexport const upload = async (path) => {\n  let formData = new FormData();\n  formData.append(\"image\", path);\n\n  try {\n    let res = await axios({\n      method: 'POST',\n      url: 'https://api.imgur.com/3/image',\n      data: formData,\n      headers: {\n        Authorization: `Client-ID ${API_KEY}`\n      },\n      mimeType: 'multipart/form-data'\n    });\n\n    return res.data.data.link;\n  } catch (e) {\n    console.log(e)\n  }\n\n}\n\nexport const getStoreInfo = async () => {\n\n  try {\n    let res = await axios({\n      method: 'get',\n      url: 'http://34.80.76.67:8000/shops/1',\n      headers: {\n        'Content-type': 'application/json'\n      },\n    });\n\n    return res.data;\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport const postStoreInfo = async (data) => {\n  try {\n    let res = await axios({\n      method: 'post',\n      url: 'http://34.80.76.67:8000/shops',\n      data,\n      headers: {\n        'Content-type': 'application/json'\n      },\n    });\n    return res.data;\n  } catch (e) {\n    console.log(e)\n  }\n}\nexport const getFSM = async (hwid = HWID) => {\n  try {\n    let res = await axios({\n      method: \"GET\",\n      url: `http://34.80.76.67:8000/fsm/${hwid}`,\n    });\n    return res;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport const postFSM = async (node_id, data, hwid = HWID) => {\n  try {\n    await axios({\n      method: \"POST\",\n      url: 'http://34.80.76.67:8000/fsm/node',\n      data: {\n        hwid,\n        node_id,\n        data: JSON.stringify(data)\n      }\n    })\n  } catch (e) {\n    console.log(e);\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Stack } from '@chakra-ui/react'\nimport StoreName from '../components/StoreInfo/StoreName'\nimport Infomation from '../components/StoreInfo/Infomation'\nimport Description from '../components/StoreInfo/Description'\nimport { getStoreInfo, postStoreInfo } from '../store/action';\n\nexport default function StoreInfo() {\n  const [name, setName] = useState('');\n  const [icon, setIcon] = useState('')\n  const [description, setDescription] = useState('');\n  const [info, setInfo] = useState({\n    opening_hours: ['', ''],\n    phone_num: '',\n    location: '',\n    category: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await getStoreInfo();\n      setName(res.name);\n      setIcon(res.icon);\n      setDescription(res.description)\n      setInfo({\n        opening_hours: [res.opening_hours.split('~')[0], res.opening_hours.split('~')[1]],\n        phone_num: res.phone_num,\n        location: res.location,\n        category: res.category.split('.')\n      })\n    }\n    fetchData();\n  }, [])\n  return (\n    <Stack\n      px={10}\n      py={5}\n      flexGrow={1}\n      spacing={8}\n    >\n      <StoreName\n        name={name}\n        icon={icon}\n        submit={() => postStoreInfo({\n          shop_id: 1,\n          name,\n          location: info.location,\n          category: info.category.join('.'),\n          opening_hours: info.opening_hours.join('~'),\n          description: description,\n          phone_num: info.phone_num,\n        })}\n      />\n      <Infomation info={info} setInfo={setInfo} />\n      <Description description={description} setDescription={setDescription} />\n    </Stack>\n  )\n}\n","import { Flex, Stack, Text } from '@chakra-ui/layout'\nimport React from 'react'\n\nexport default function KeyNumber() {\n  const DisplayNumber = ({title, number}) => <Stack minW='300px'>\n    <Text fontSize='md' color='rgba(0, 0, 0, 0.45)'>\n      {title}\n    </Text>\n    <Text fontSize='lg' fontWeight='semibold'>\n      {number}\n    </Text>\n  </Stack>\n  return (\n    <Flex\n      direction='column'\n      bgColor='white'\n      border='solid 1px #e3e3e3'\n      borderRadius={3}\n    >\n      <Flex bgColor='#fafafa' p={3} fontWeight='semibold'>\n        Key Number\n      </Flex>\n      <Flex p={3}>\n        <DisplayNumber title={'Today\\'s Customer'} number={13}/>\n        <DisplayNumber title={'Customer in last 7 days'} number={132}/>\n        <DisplayNumber title={'Cumulative Customer'} number={1782}/>\n      </Flex>\n      <Flex p={3}>\n        <DisplayNumber title={'Today\\'s Reply'} number={36}/>\n        <DisplayNumber title={'Reply in last 7 days'} number={448}/>\n        <DisplayNumber title={'Reply Customer'} number={3360}/>\n      </Flex>\n    </Flex>\n  )\n}\n","import React from 'react'\nimport { Flex } from '@chakra-ui/layout'\nimport ReactECharts from 'echarts-for-react';\n\nexport default function CustomerChart() {\n  const chartOption = {\n    xAxis: {\n      type: 'category',\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [\n      {\n        data: [150, 230, 224, 218, 135, 147, 260],\n        type: 'line'\n      }\n    ],\n    tooltip: {\n      trigger: 'axis',\n    }\n  };\n  return (\n    <Flex\n      w='50%'\n      direction='column'\n      bgColor='white'\n      border='solid 1px #e3e3e3'\n      borderRadius={3}\n    >\n      <Flex bgColor='#fafafa' p={3} fontWeight='semibold'>\n        Key Number\n      </Flex>\n      <ReactECharts style={{height: '100%'}} option={chartOption} />\n    </Flex>\n  )\n}\n","import React, { useState } from 'react'\nimport { Flex, OrderedList, ListItem, Text, Select } from '@chakra-ui/react'\nimport styled from 'styled-components'\n\nconst data = [\n  {\n    question: 'gender',\n    reply: [\n      {\n        title: 'male',\n        num: 45\n      },\n      {\n        title: 'female',\n        num: 66\n      }\n    ],\n  },\n  {\n    question: 'age',\n    reply: [\n      {\n        title: '10~17',\n        num: 33\n      },\n      {\n        title: '18~25',\n        num: 78\n      },\n      {\n        title: '26~35',\n        num: 65\n      },\n      {\n        title: '36~45',\n        num: 45\n      },\n      {\n        title: '46~55',\n        num: 35\n      },\n      {\n        title: '56~65',\n        num: 74\n      },\n      {\n        title: '66~75',\n        num: 23\n      },\n      {\n        title: '76~85',\n        num: 12\n      },\n      {\n        title: '86~95',\n        num: 3\n      },\n      {\n        title: '96~105',\n        num: 1\n      },\n      {\n        title: '106~115',\n        num: 0\n      },\n      {\n        title: '116~125',\n        num: 0\n      },\n      {\n        title: '126~135',\n        num: 0\n      }\n    ],\n  }\n]\n\nexport default function ReplyStat() {\n  const [selected, setSelected] = useState();\n  const handleOnChange = (e) => {\n    setSelected(e.target.value);\n  }\n  return (\n    <Flex\n      w='45%'\n      direction='column'\n      bgColor='white'\n      border='solid 1px #e3e3e3'\n      borderRadius={3}\n      maxH='400px'\n      minH='400px'\n    >\n      <Flex bgColor='#fafafa' p={3} justify='space-between'>\n        <Text fontWeight='semibold'>Reply Statistic</Text>\n        <Select\n          w='50%'\n          h='100%'\n          bgColor='white'\n          placeholder=\"Select option\"\n          value={selected}\n          onChange={handleOnChange}\n        >\n          {data.map((d, index) => <option value={index} key={d.question}>\n            {d.question}\n          </option>)}\n        </Select>\n      </Flex>\n      <OrderedList m={0} overflow='scroll'>\n        {selected && data[selected].reply.map(option => <CustomListItem key={option.title}>\n          <Flex h='100%' px={3} justify='space-between' align='center'>\n            <Text>{option.title}</Text>\n            <Text>{option.num}</Text>\n          </Flex>\n        </CustomListItem>)}\n      </OrderedList>\n    </Flex>\n  )\n}\n\nconst CustomListItem = styled(ListItem)`\n  height: 40px;\n  list-style: none;\n  border-bottom: solid 1px #e3e3e3;\n  :hover{\n    background-color: rgba(0, 112, 188, 0.05);\n  }\n`\n","import React from 'react'\nimport { Flex } from '@chakra-ui/layout'\nimport KeyNumber from '../components/Dashboard/KeyNumber'\nimport CustomerChart from '../components/Dashboard/CustomerChart'\nimport ReplyStat from '../components/Dashboard/ReplyStat'\n\nexport default function Dashboard() {\n  return (\n    <Flex\n      px={10}\n      py={5}\n      flexGrow={1}\n      direction='column'\n      justify='space-between'\n    >\n      <KeyNumber />\n      <Flex mt={5} justify='space-between'>\n        <CustomerChart />\n        <ReplyStat />\n      </Flex>\n    </Flex>\n  )\n}\n","import React from 'react';\n\nimport { Button } from '@chakra-ui/button';\n\nconst Menu = ({onGlobalSave}) => {\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData('application/reactflow', nodeType);\n    event.dataTransfer.effectAllowed = 'move';\n  };\n\n  return (\n    <aside>\n      <div className=\"dndnode input\" onDragStart={(event) => onDragStart(event, 'input')} draggable>\n        Input Node\n      </div>\n      <div className=\"dndnode\" onDragStart={(event) => onDragStart(event, 'node')} draggable>\n        Default Node\n      </div>\n      <div className=\"dndnode output\" onDragStart={(event) => onDragStart(event, 'output')} draggable>\n        Output Node\n      </div>\n      <Button onClick={onGlobalSave}>Save</Button>\n    </aside>\n  );\n};\n\nexport default Menu;\n","import React, { useState } from 'react'\nimport {\n  Text,\n  Stack,\n  Button,\n  Textarea,\n  Input,\n  Flex\n} from '@chakra-ui/react'\nimport { MdAddCircleOutline } from 'react-icons/md';\n\nconst TextSection = ({ data, onEdit, editHandler }) => {\n  const [content, setContent] = useState(data.content);\n  const [buttons, setButtons] = useState(data.buttons);\n  const handleAddOnClick = () => {\n    setButtons((bs) => {\n      const newBtn = {\n        text: \"new button\",\n        edgeTo: \"\"\n      }\n      editHandler([\"buttons\"], [[...bs, newBtn]]);\n      return [...bs, newBtn];\n    });\n  }\n  return (\n    <Stack>\n      {\n        onEdit ?\n          <Textarea\n            fontSize=\"xs\"\n            defaultValue={content}\n            bg={\"#fff\"}\n            onChange={(e) => {\n              setContent(e.target.value);\n              editHandler([\"content\"], [e.target.value])\n            }}\n          /> :\n          <Text fontSize=\"xs\">{content}</Text>\n      }\n      {\n        data.buttons ? \n          data.buttons.map((b, idx) => {\n            return (\n              <Button colorScheme=\"blackAlpha\" role=\"group\" key={idx}>\n                {\n                  onEdit ?\n                    <Input defaultValue={b.text} bg={\"#fff\"} color={\"#000\"} style={{ textAlign: \"center\", height: \"60%\", borderRadius: \"3px\" }}\n                      onChange={(e) => {\n                        setButtons((bs) => {\n                          bs[idx] = {\n                            ...bs[idx],\n                            text: e.target.value\n                          };\n                          console.log([\"buttons\"], [bs]);\n                          editHandler([\"buttons\"], [bs]);\n                          return bs;\n                        });\n                      }}\n                    /> :\n                    <Text>{buttons[idx].text}</Text>\n                }\n              </Button>\n            )\n          }) : \n          <></>\n      }\n      {onEdit && <Flex w='100%' p={1} justify='center'>\n        <MdAddCircleOutline fontSize='20px' cursor='pointer' onClick={handleAddOnClick}/>\n      </Flex>}\n    </Stack>\n  )\n}\n\nexport default TextSection\n","import React, { useState } from 'react'\nimport { upload } from '../../store/action'\n\nconst ImageSection = ({data, onEdit, editHandler}) => {\n  const [url, setUrl] = useState(data.url);\n\n  return (\n    <>\n      <img src={url} style={{borderRadius: '6px'}} alt=\"\" />\n      <input type=\"file\" style={{display: onEdit ? \"block\" : \"none\"}} onChange={async e => {\n        let newUrl = await upload(e.target.files[0]);\n        setUrl(newUrl);\n        editHandler([\"url\"], [newUrl]);\n      }}/>\n    </>\n  )\n}\n\nexport default ImageSection\n","import React from 'react'\nimport { Flex, HStack, Image, Input, Stack, Text } from '@chakra-ui/react'\nimport { MdAddCircleOutline } from 'react-icons/md';\nimport { upload } from '../../store/action'\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function CarouselSection({ data, onEdit, editHandler }) {\n  const contents = data.content;\n  const ImagePlaceHolder = () => {\n    const id = `imgupload_${uuidv4()}`;\n    return <Flex>\n      {onEdit && <input\n        style={{ width: 0, opacity: 0 }}\n        display='none'\n        type='file'\n        id={id}\n        onChange={async e => {\n          const newUrl = await upload(e.target.files[0]);\n          const newContent = [...contents, {\n            url: newUrl,\n            buttons: [\n              {\n                text: \"text\",\n                edgeTo: \"\"\n              }\n            ]\n          }]\n          editHandler([\"content\"], [newContent]);\n        }} />}\n      <label htmlFor={id}>\n        <Flex\n          minW='300px'\n          h='300px'\n          justify='center'\n          align='center'\n          bgColor='rgba(255, 255, 255, 0.5)'\n          borderRadius='5px'\n          cursor='pointer'\n          _hover={{ backgroundColor: 'rgba(255, 255, 255, 1)' }}\n        >\n          <MdAddCircleOutline fontSize='40px' cursor='pointer' />\n        </Flex>\n      </label>\n    </Flex>\n  }\n  return (\n    <HStack h={contents.length !== 0 || onEdit ? '300px' : '0'} overflowX='scroll' spacing={10}>\n      {contents && contents.map((content, index) => {\n        const id = `imgupload_${uuidv4()}`;\n        return <Stack\n          key={index}\n          minW='300px'\n          h='100%'\n          justify='center'\n          align='center'\n          borderRadius='5px'\n          position='relative'\n          overflow='hidden'\n          bgColor='rgba(255, 255, 255, 0.5)'\n          _hover={{ backgroundColor: 'rgba(255, 255, 255, 1)' }}\n        >\n          {onEdit && <input\n            style={{ height: 0, opacity: 0 }}\n            display='none'\n            type='file'\n            id={id}\n            onChange={async e => {\n              const newUrl = await upload(e.target.files[0]);\n              const urls = data.content.map((e, idx) => idx === index ? newUrl : e.url);\n              const newContent = contents.map((content, idx) => ({ ...content, url: urls[idx] }));\n              editHandler([\"content\"], [newContent]);\n            }} />}\n          <label htmlFor={id}>\n            <Image\n              src={content.url}\n              cursor={onEdit ? 'pointer' : 'default'}\n            />\n          </label>\n          <Flex\n            px={5}\n            py={2}\n            position='absolute'\n            bottom='20px'\n            borderRadius='20px'\n            color='white'\n            bgColor='rgba(0,0,0,0.5)'\n            h='40px'\n          >\n            {onEdit\n              ? <Input\n                w='80px'\n                maxH='100%'\n                textAlign='center'\n                variant=\"flushed\"\n                value={content.buttons[0].text}\n                onChange={(e) => {\n                  const newBtn = [{\n                    ...content.buttons[0],\n                    text: e.target.value\n                  }]\n                  const newContent = contents.map((content) => ({ ...content, buttons: newBtn }));\n                  editHandler([\"content\"], [newContent])\n                }\n                }\n              />\n              : <Text>{content.buttons[0].text}</Text>}\n          </Flex>\n        </Stack>\n      })}\n      {onEdit && <ImagePlaceHolder />}\n    </HStack>\n  )\n}\n","import React from 'react'\n\nimport TextSection from './text';\nimport ImageSection from './image';\nimport CarouselSection from './CarouselSection';\n\nexport const MessageTypeMap = {\n  \"text\": \"Send Text\",\n  \"img\": \"Send Image\",\n  \"carousel\": \"Image Carousel\"\n}\n\nconst MessageSection = ({data, idx, onEdit, onEditSection}) => {\n  const editHandler = (keys, values) => {\n    keys.forEach((key, i) => {\n      onEditSection(idx, key, values[i]);\n    });\n  }\n\n  switch(data.type) {\n    case \"text\": {\n      return (\n        <TextSection data={data} onEdit={onEdit} editHandler={editHandler} />\n      )    \n    }\n    case \"img\": {\n      return (\n        <ImageSection data={data} onEdit={onEdit} editHandler={editHandler} />\n      )    \n    }\n    case \"carousel\": {\n      return (\n        <CarouselSection data={data} onEdit={onEdit} editHandler={editHandler} />\n      )    \n    }\n    default: {\n      return null;\n    }\n  }\n}\n\nexport default MessageSection\n","import React, { useState } from 'react'\n\nimport {\n  CloseButton,\n  SimpleGrid,\n  VStack,\n  Flex,\n  Spacer,\n  Box,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  Input,\n  Icon,\n  Text,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon\n} from \"@chakra-ui/react\"\n\nimport { BsTextareaT, BsImage, BsGrid1X2 } from \"react-icons/bs\"\nimport { BiCarousel } from \"react-icons/bi\"\nimport { MdOutlineDragIndicator, MdEditNote, MdOutlineClose } from \"react-icons/md\"\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Handle } from 'react-flow-renderer';\n\nimport MessageSection, { MessageTypeMap } from \"../Message\";\nimport { postFSM } from '../../store/action';\n\nconst State = ({data}) => {\n  const { id, onDelete, stateData, onSaveState, onSetPosition, type } = data;\n  const [sections, setSections] = useState(stateData ? JSON.parse(JSON.stringify(stateData.sections)) : []);\n  const [title, setTitle] = useState(stateData?.title || \"\");\n  const [editIdx, setEditIdx] = useState(-1);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const onSave = async () => {\n    await postFSM(id, {\n      ...stateData,\n      title,\n      sections\n    });\n    onSaveState(sections, title);\n  }\n\n  const onCancel = () => {\n    setSections(JSON.parse(JSON.stringify(stateData?.sections || [])));\n  }\n\n  const onDragEnd = (res) => {\n    if (!res.destination) {\n      return;\n    }\n\n    setSections(ss => {\n      const result = Array.from(ss);\n      const [removed] = result.splice(res.source.index, 1);\n      result.splice(res.destination.index, 0, removed);\n\n      return result;\n    });\n  }\n\n  const onRemoveSection = (idx) => {\n    setSections(ss => {\n      const result = Array.from(ss);\n      result.splice(idx, 1);\n      return result;\n    });\n  }\n\n  const onEditSection = (idx, key, value) => {\n    setSections(ss => {\n      const result = Array.from(ss);\n      result[idx][key] = value;\n      return result;\n    });\n  }\n\n  const onNewSection = (type) => {\n    const SectionTemplates = {\n      \"img\": {\n        type: \"img\",\n        url: \"\"\n      },\n      \"text\": {\n        type: \"text\",\n        content: \"\",\n        buttons: []\n      },\n      \"carousel\": {\n        type: \"carousel\",\n        content: []\n      }\n    }\n    console.log(SectionTemplates, type, SectionTemplates[type])\n    const newSection = [...sections, SectionTemplates[type]];\n    setSections(newSection);\n  }\n\n  return (\n    <div style={nodeStyle}>\n      <Handle type=\"target\" position=\"left\" />\n      <VStack \n        onClick={onOpen} \n        onMouseUp={(event) => {\n          onSetPosition(event.clientX, event.clientY);\n        }}\n      >\n        <Flex width=\"100%\" alignItems=\"center\">\n          <Box padding=\"0 8px\" fontWeight='bold' color='#282c34'>{title}</Box>\n          <Spacer />\n          <CloseButton size=\"sm\" onClick={() => {\n            onDelete(id);\n          }} />\n        </Flex>\n        {sections.map((s, s_idx) => {\n          if (s.type === \"text\" && s.buttons) {\n            return ([\n              <hr style={{ margin: \"1px\", width: \"100%\", border: \"#000 1px solid\" }} />,\n              ...s.buttons.map((b, b_idx) => {\n                return (\n                  <Box key={`${s_idx}_${b_idx}`} style={{ margin: '3px', width: \"100%\", position: \"relative\", textAlign: \"center\" }} >\n                    {b.text}\n                    <Handle type=\"source\" id={`${s_idx}_${b_idx}`} position=\"right\" style={dotStyle} />\n                  </Box>\n                )\n              })\n            ])\n          } else if (s.type === \"carousel\") {\n            return ([\n              <hr style={{ margin: \"1px\", width: \"100%\", border: \"#000 1px solid\" }} />,\n              ...s.content.map((b, b_idx) => {\n                return (\n                  <Box key={`${s_idx}_${b_idx}`} style={{ margin: '3px', width: \"100%\", position: \"relative\", textAlign: \"center\" }} >\n                    {b.buttons[0].text}\n                    <Handle type=\"source\" id={`${s_idx}_${b_idx}`} position=\"right\" style={dotStyle}></Handle>\n                  </Box>\n                )\n              })\n            ])\n          }\n          return null;\n        })}\n      </VStack>\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            <Input\n              placeholder=\"Title here\"\n              variant=\"flushed\"\n              maxWidth=\"90%\"\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n            />\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"droppable\">\n                {(provided, snapshot) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                  >\n                    {sections.map((s, idx, arr) => (\n                      <Draggable key={idx} draggableId={`${id}_${idx}`} index={idx}>\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                          >\n                            <Box\n                              p=\"6px 10px\"\n                              m='10px 0'\n                              _hover={{ bg: '#EDF2F7', transition: '0.3s', borderRadius: '6px' }}\n                              role=\"group\"\n                              key={idx}\n                            >\n                              <Flex width=\"100%\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\n                                <Flex alignItems=\"center\">\n                                  <Text fontSize=\"sm\" {...provided.dragHandleProps}>\n                                    <Icon as={MdOutlineDragIndicator} width=\"0px\" style={{ transition: '0.2s' }} _groupHover={{ width: '12px' }} />\n                                  </Text>\n                                  <Text fontWeight=\"bold\" fontSize=\"sm\">{`#${idx + 1} ${MessageTypeMap[s.type]}`}</Text>\n                                </Flex>\n                                <Flex alignItems=\"center\">\n                                  <Icon\n                                    as={MdEditNote}\n                                    onClick={() => {\n                                      setEditIdx(v => {\n                                        return v === idx ? -1 : idx\n                                      });\n                                    }}\n                                    style={{ transition: '0.2s' }}\n                                    opacity=\"0\"\n                                    _groupHover={{ opacity: \"1\" }}\n                                  />\n                                  <Icon\n                                    as={MdOutlineClose}\n                                    onClick={() => {\n                                      onRemoveSection(idx);\n                                    }}\n                                    style={{ transition: '0.2s' }}\n                                    opacity=\"0\"\n                                    _groupHover={{ opacity: \"1\" }}\n                                  />\n                                </Flex>\n                              </Flex>\n                              <MessageSection\n                                data={s}\n                                idx={idx}\n                                onEdit={editIdx === idx}\n                                onEditSection={onEditSection}\n                              />\n                            </Box>\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n            <br />\n            <Accordion allowMultiple width=\"100%\">\n              <AccordionItem>\n                <AccordionButton p=\"2px 4px\">\n                  <Box flex=\"1\" textAlign=\"left\">Add more</Box><AccordionIcon />\n                </AccordionButton>\n\n                <AccordionPanel pb={4}>\n                  <SimpleGrid columns={2} spacing={2} width=\"100%\">\n                    <ListItem\n                      title=\"Text message\"\n                      icon={BsTextareaT}\n                      onClick={() => {\n                        onNewSection(\"text\");\n                      }}\n                    />\n                    <ListItem\n                      title=\"Image message\"\n                      icon={BsImage}\n                      onClick={() => {\n                        onNewSection(\"img\");\n                      }}\n                    />\n                    <ListItem\n                      title=\"Carousel message\"\n                      icon={BiCarousel}\n                      onClick={() => {\n                        onNewSection(\"carousel\");\n                      }}\n                    />\n                    <ListItem\n                      title=\"Menu message\"\n                      icon={BsGrid1X2}\n                      onClick={() => {\n                        onNewSection(\"menu\");\n                      }}\n                    />\n                  </SimpleGrid>\n                </AccordionPanel>\n              </AccordionItem>\n            </Accordion>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button size=\"sm\" onClick={onSave} colorScheme=\"blue\" mr={3}>Save</Button>\n            <Button size=\"sm\" onClick={() => {\n              onCancel();\n              onClose();\n            }}>Cancel</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  )\n}\n\nconst ListItem = ({ title, type, icon, ...rest }) => {\n  return (\n    <Box _hover={{ bg: \"var(--chakra-colors-gray-200)\" }} p=\"2px 10px\" shadow=\"md\" borderWidth=\"1px\" borderRadius=\"6px\" {...rest} >\n      <Icon as={icon} /> <Text display=\"inline\" fontSize=\"sm\">{title}</Text>\n    </Box>\n  )\n}\n\nexport default State;\n\nconst nodeStyle = {\n  border: \"1px #878787 solid\",\n  borderRadius: \"4px\",\n  padding: \"8px\",\n  backgroundColor: \"#fafafa\",\n  boxShadow: '3px 5px 18px 0 rgba(0, 112, 188, 0.1), 0 -1px 16px 0 rgba(0, 112, 188, 0.1)'\n}\n\nconst dotStyle = {\n  top: '50%',\n  width: '8px',\n  height: '8px',\n  zIndex: 100,\n}\n","import React from 'react';\nimport {\n  getBezierPath,\n  getEdgeCenter,\n  getMarkerEnd,\n} from 'react-flow-renderer';\n\nimport { Center, Circle } from \"@chakra-ui/react\"\n\nimport './edge.css';\n\nconst foreignObjectSize = 40;\n\nconst ButtonEdge = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  });\n  const markerEnd = getMarkerEnd(\"arrowclosed\", markerEndId);\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  });\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n        requiredExtensions=\"http://www.w3.org/1999/xhtml\"\n      >\n        <Center \n          width={`${foreignObjectSize}px`}\n          height={`${foreignObjectSize}px`}\n          onClick={() => {\n            data.onDelete(id);\n          }}\n        >\n          <Circle size=\"15px\" bg=\"#eee\" className=\"edge-button\" >\n            ×\n          </Circle>\n        </Center>\n      </foreignObject>\n    </>\n  );\n}\n\nexport default ButtonEdge\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  isEdge,\n  updateEdge,\n  removeElements,\n  Controls,\n  getConnectedEdges,\n  Background\n} from 'react-flow-renderer';\n\nimport Menu from './Menu';\nimport State from '../State';\nimport ButtonEdge from '../State/ButtonEdge';\n\nimport { getFSM, postFSM } from '../../store/action';\n\nimport './style.css';\n\nlet startId = 1;\nconst getId = () => `node_${startId++}`;\n\nconst Panel = () => {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [elements, setElements] = useState([]);\n  const [stateData, setStateData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const states = await getFSM();\n      let sd = states.data.map(s => {\n        return JSON.parse(s.data.replace('\\\\\\\"', '\\\"'));\n      });\n      startId = sd.length;\n      setStateData(sd);\n    }\n    getData();\n  }, [])\n  \n  const onGlobalSave = () => {\n    // update edges to deleted nodes\n    let stateIds = stateData.map(sd => sd.id);\n\n    let newStateData = stateData;\n    stateData.forEach(s => {\n      s.sections.forEach(_s => {\n        if (_s.type === \"text\" && _s.buttons) {\n          _s.buttons.forEach((b, idx, arr) => {\n            if (stateIds.indexOf(b.edgeTo) === -1) {\n              arr[idx].edgeTo = \"\";\n            }\n          })\n        } else if (_s.type === \"carousel\") {\n          _s.content.forEach((c, c_idx, arr) => {\n            if (stateIds.indexOf(c.buttons[0].edgeTo) === -1) {\n              arr[c_idx].edgeTo = \"\";\n            }\n          })\n        }\n      })\n    })\n    setStateData(newStateData);\n\n    stateData.forEach(s => {\n      postFSM(s.id, s);\n    })\n  }\n\n  const onConnect = (params) => {\n    let sectionIdx = params.sourceHandle.split('_')[0];\n    let buttonIdx = params.sourceHandle.split('_')[1];\n\n    setElements((els) => {\n      return addEdge({ \n        ...params, \n        type: 'button', \n        data: {onDelete: deleteElementById} \n      }, els)\n    });\n\n    let newStateData = stateData;\n    stateData.forEach((s, idx, arr) => {\n      if (s.id === params.source) {\n        if (s.sections[sectionIdx].type === \"text\") {\n          arr[idx].sections[sectionIdx].buttons[buttonIdx].edgeTo = params.target;\n        } else if (s.sections[sectionIdx].type === \"carousel\") {\n          arr[idx].sections[sectionIdx].content[buttonIdx].buttons[0].edgeTo = params.target;\n        }\n      }\n    });\n    setStateData(newStateData);\n  }\n\n  const onEdgeUpdate = (oldEdge, newConnection) => {\n    let sectionIdx = newConnection.sourceHandle.split('_')[0];\n    let buttonIdx = newConnection.sourceHandle.split('_')[1];\n    let newStateData = stateData;\n    stateData.forEach((s, idx, arr) => {\n      if (s.id === newConnection.source) {\n        if (s.sections[sectionIdx].type === \"text\") {\n          arr[idx].sections[sectionIdx].buttons[buttonIdx].edgeTo = newConnection.target;\n        } else if (s.sections[sectionIdx].type === \"carousel\") {\n          arr[idx].sections[sectionIdx].content[buttonIdx].buttons[0].edgeTo = newConnection.target;\n        }\n      }\n    });\n    setStateData(newStateData);\n    setElements((els) => updateEdge(oldEdge, newConnection, els));\n  }\n\n  const onDragOver = (event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  };\n\n  const getPosition = (x, y) => {\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    return reactFlowInstance.project({\n      x: x - reactFlowBounds.left,\n      y: y - reactFlowBounds.top,\n    });\n  }\n\n  const onDrop = (event) => {\n    event.preventDefault();\n\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    });\n\n    let newId = getId()\n    const newNode = {\n      id: newId,\n      type: \"node\",\n      position,\n      data: {\n        id: newId,\n        type,\n        onDelete: deleteElementById,\n        stateData: null,\n        onSaveState: (newSections) => {\n          setStateData(sd => {\n            return sd.map(s => {\n              if (s.id === newId) {\n                s.sections = newSections;\n              }\n              return s;\n            })\n          })\n        },\n        onSetPosition: (x, y) => {\n          setStateData(sd => {\n            return sd.map(s => {\n              if (s.id === newId) {\n                s.position = getPosition(x, y);\n              }\n              return s;\n            })\n          })\n        }\n      },\n    };\n\n    setElements((es) => es.concat(newNode));\n    setStateData(sd => sd.concat({\n      id: newId,\n      type,\n      position,\n      title: \"\",\n      sections: []\n    }))\n  };\n\n  const deleteElementById = useCallback(\n    (id) => setElements((els) => {\n      const targetElement = els.filter(e => e.id === id);\n      if (targetElement[0].type === \"node\") {\n        stateData.splice(stateData.findIndex(s => s.id === id), 1);\n        setStateData(stateData);\n        const edges = reactFlowInstance.getElements().filter(e => isEdge(e));\n        const connectedEdges = getConnectedEdges(targetElement, edges);\n        return removeElements([...targetElement, ...connectedEdges], els);  \n      } else if (targetElement[0].type === \"button\") {\n        console.log(targetElement[0]);\n\n        let sectionIdx = targetElement[0].sourceHandle.split('_')[0];\n        let buttonIdx = targetElement[0].sourceHandle.split('_')[1];\n        let newStateData = stateData;\n        stateData.forEach((s, idx, arr) => {\n          if (s.id === targetElement[0].source) {\n            if (s.sections[sectionIdx].type === \"text\") {\n              arr[idx].sections[sectionIdx].buttons[buttonIdx].edgeTo = \"\";\n            } else if (s.sections[sectionIdx].type === \"carousel\") {\n              arr[idx].sections[sectionIdx].content[buttonIdx].buttons[0].edgeTo = \"\";\n            }\n          }\n        });\n        setStateData(newStateData);\n        console.log(stateData);\n\n        return removeElements([...targetElement], els);  \n      }\n    }),\n    [reactFlowInstance, stateData],\n  )\n\n  useEffect(() => {\n    // set nodes\n    setElements(stateData.map(s => {\n      return {\n        ...s, \n        type: \"node\",\n        data: {\n          id: s.id,\n          type: s.type,\n          stateData: s,\n          onDelete: deleteElementById,\n          onSaveState: (newSections, title) => {\n            setStateData(sd => {\n              return sd.map(_s => {\n                if (_s.id === s.id) {\n                  _s.sections = newSections;\n                  _s.title = title;\n                }\n                return _s;\n              })\n            })\n          },\n          onSetPosition: (x, y) => {\n            console.log(x, y);\n            setStateData(sd => {\n              return sd.map(_s => {\n                if (_s.id === s.id) {\n                  _s.position = getPosition(x, y);\n                }\n                return _s;\n              })\n            })\n          }\n        }\n      }\n    }));\n\n    // link edges\n    stateData.forEach(s => {\n      if (s.sections) {\n        s.sections.forEach((se, se_idx) => {\n          if (se.type === \"text\" && se.buttons) {\n            se.buttons.forEach((b, b_idx) => {\n              if (b.edgeTo !== \"\") {\n                let params = {\n                  source: s.id,\n                  sourceHandle: `${se_idx}_${b_idx}`,\n                  target: b.edgeTo,\n                  targetHandle: null\n                }\n                setElements((els) => {\n                  return addEdge({ \n                    ...params,\n                    type: 'button', \n                    data: {onDelete: deleteElementById} \n                  }, els)\n                });  \n              }\n            })\n          } else if (se.type === \"carousel\") {\n            se.content.forEach((c, c_idx) => {\n              if (c.buttons[0].edgeTo !== \"\") {\n                let params = {\n                  source: s.id,\n                  sourceHandle: `${se_idx}_${c_idx}`,\n                  target: c.buttons[0].edgeTo,\n                  targetHandle: null\n                }\n                setElements((els) => {\n                  return addEdge({\n                    ...params,\n                    type: 'button',\n                    data: { onDelete: deleteElementById }\n                  }, els)\n                });\n              }\n            })\n          }\n        });\n      }\n    })\n  }, [deleteElementById, stateData])\n\n  return (\n    <div className=\"dndflow\">\n      <ReactFlowProvider>\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n          <ReactFlow\n            elements={elements}\n            onConnect={onConnect}\n            onElementsRemove={\n              (elementsToRemove) =>\n                setElements((els) => removeElements(elementsToRemove, els))\n            }\n            onEdgeUpdate={onEdgeUpdate}\n            onLoad={\n              (_reactFlowInstance) => setReactFlowInstance(_reactFlowInstance)\n            }\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            nodeTypes={{\n              node: State\n            }}\n            edgeTypes={{\n              button: ButtonEdge\n            }}\n          >\n            <Controls />\n            <Background\n              variant=\"lines\"\n              gap={100}\n              size={2}\n            />\n          </ReactFlow>\n        </div>\n        <Menu onGlobalSave={onGlobalSave} />\n      </ReactFlowProvider>\n    </div>\n  );\n};\n\nexport default Panel;","import React from 'react'\nimport Panel from '../components/EditorPanel'\n\nexport default function BotEditor() {\n  return (\n    <div style={{width: '100%', height: '100%'}}>\n      <Panel />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Flex, Text, HStack } from '@chakra-ui/layout'\nimport { useLocation } from 'react-router';\nimport { MdPerson } from 'react-icons/md';\n\nexport default function Navbar() {\n  const location = useLocation();\n  const urlToPageName = {\n    '/dashboard': 'Dashboard',\n    '/storeinfo': 'Store Info',\n    '/boteditor': 'Bot Editor'\n  };\n  return (\n    <Flex\n      w='100%'\n      px={7}\n      py={3}\n      align='center'\n      bgColor='white'\n      justify='space-between'\n    >\n      <Text fontWeight='semibold' fontSize='2xl'>\n        {urlToPageName[location.pathname]}\n      </Text>\n      <HStack align='center'>\n        <MdPerson fontSize='1.5rem'/>\n        <Text>今日店內人數：</Text>\n        <Text>13</Text>\n      </HStack>\n    </Flex>\n  )\n}\n","import React from 'react';\nimport { ChakraProvider, CSSReset } from '@chakra-ui/react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components'\n\nimport Sidebar from './views/Sidebar';\nimport Login from './views/Login';\nimport StoreInfo from './views/StoreInfo';\nimport Dashboard from './views/Dashboard';\nimport BotEditor from './views/BotEditor';\nimport Navbar from './views/Navbar';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <CSSReset />\n      <HashRouter>\n        <Container>\n          <Sidebar />\n          <MainSection>\n            <Navbar />\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/dashboard\" />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/storeinfo\" component={StoreInfo} />\n              <Route exact path=\"/boteditor\" component={BotEditor} />\n            </Switch>\n          </MainSection>\n        </Container>\n      </HashRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100vw;\n  min-height: 100vh;\n`\n\nconst MainSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  flex-grow: 1;\n  background-color: #f6f8fa;\n  width: calc(100vw - 200px);\n  height: 100vh;\n`\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}